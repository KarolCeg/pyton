class Graf():

    def __init__(self, wierzcholki, krawedzie):
        self.wierzcholki = set(wierzcholki)
        self.krawedzie = krawedzie
        self.sasiedzi = []
            
def utw_zbior(elem):
    return {elem}


def Sort(A):
    kraw = []
    A.sort(key=lambda x : x[1])
    for elem in A:
        kraw.append(elem[0])
    return kraw


def znaj_elem(a, A):
    for elem in A:
        if a in elem:
            return elem


def Kruskal(Graf, Waga):
    A = []
    B = []
    for elem in Graf.wierzcholki:
        B.append(utw_zbior(elem))  
    Waga_sort = Sort(Waga) 
    for i, j in Waga_sort:
        zb_a = znaj_elem(i, B) 
        zb_b = znaj_elem(j, B)
        if zb_a != zb_b:
            A.append((i, j))
            B.append(zb_a.union(zb_b))
            B.remove(zb_b)
            B.remove(zb_a)
    return A


if __name__ == "__main__":
    G_wierzch = ["A", "B", "C", "D", "E", "F", "G", "H"]
    G_kraw_kg =[(("A","B"), 4), (("A","C"),8), (("A","D"),11), (("B","C"),8),(("B","E"),7),(("B","F"),1),(("C","E"),2),(("C","D"),6),(("D","G"),7),(("E","G"),4),(("E","H"),2),(("E","F"),14),(("G","H"),9),(("H","F"),10) ]

    graf = Graf(G_wierzch, G_kraw_kg)
    A = Kruskal(graf, G_kraw_kg)
    print(A)
